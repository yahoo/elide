/*
 * Copyright 2020, Yahoo Inc.
 * Licensed under the Apache License, Version 2.0
 * See LICENSE file in project root for terms.
 */
package dynamicconfig.models;

import com.yahoo.elide.annotation.DeletePermission;
import com.yahoo.elide.annotation.Include;
import com.yahoo.elide.annotation.Exclude;
import com.yahoo.elide.annotation.ReadPermission;
import com.yahoo.elide.annotation.UpdatePermission;
import com.yahoo.elide.datastores.aggregation.annotation.Cardinality;
import com.yahoo.elide.datastores.aggregation.annotation.CardinalitySize;
import com.yahoo.elide.datastores.aggregation.annotation.ColumnMeta;
import com.yahoo.elide.datastores.aggregation.annotation.DimensionFormula;
import com.yahoo.elide.datastores.aggregation.annotation.MetricFormula;
import com.yahoo.elide.datastores.aggregation.annotation.Join;
import com.yahoo.elide.datastores.aggregation.annotation.TableMeta;
import com.yahoo.elide.datastores.aggregation.annotation.Temporal;
import com.yahoo.elide.datastores.aggregation.annotation.TimeGrainDefinition;
import com.yahoo.elide.datastores.aggregation.metadata.enums.TimeGrain;
import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromSubquery;
import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromTable;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

import java.math.BigDecimal;
import java.util.Date;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Id;

/**
 * A root level entity for testing AggregationDataStore.
 */
@Cardinality(size = CardinalitySize.<%#toUpperCase cardinality%><%/toUpperCase%>)
@EqualsAndHashCode
@ToString
@Data
<%#if table%>@FromTable(name = "<%#if schema%><%schema%>.<%/if%><%table%>", dbConnectionName = "<%dbConnectionName%>")
<%else if sql%>@FromSubquery(sql = "<%sql%>", dbConnectionName = "<%dbConnectionName%>")
<%/if%>
<%#if readAccess%>@ReadPermission(expression = "<%readAccess%>")<%/if%>
@TableMeta(
    description = "<%description%>",
    category="<%category%>",
    tags={<%#collectionToString tags%><%/collectionToString%>},
    filterTemplate="<%filterTemplate%>"
)
<%#if hidden%>@Exclude<%else%>@Include(type = "<%#lowerCaseFirstLetter name%><%/lowerCaseFirstLetter%>")<%/if%>
public class <%#capitalizeFirstLetter name%><%/capitalizeFirstLetter%> <%#if extend%>extends <%#capitalizeFirstLetter extend%><%/capitalizeFirstLetter%><%/if%>{

    private String id;

    @Id
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

<%#each dimensions%>
<%#if override%>
<%else%>
<%#ifTypeMatches type "TIME"%>
    protected com.yahoo.elide.datastores.aggregation.timegrains.<%#getGrainType grain%><%/getGrainType%> <%name%>;
<%else%>
    protected <%#getJavaType type%><%/getJavaType%> <%name%>;
<%/ifTypeMatches%>
<%/if%>
<%#ifTypeMatches type "TIME"%>
<%#with grain%>
    @Temporal(grain = @TimeGrainDefinition(grain = TimeGrain.<%type%>, expression = "<%sql%>"), timeZone = "UTC")
<%/with%>
<%/ifTypeMatches%>
    <%#if readAccess%>@ReadPermission(expression = "<%readAccess%>")<%/if%>
    @ColumnMeta(
        description = "<%description%>",
        category="<%category%>",
        values={<%#collectionToString values%><%/collectionToString%>},
        tags={<%#collectionToString tags%><%/collectionToString%>},
        tableSource="<%tableSource%>"
    )
    <%#if hidden%>@Exclude<%/if%>
    <%#if override%>@Override<%/if%>
    @DimensionFormula("<%definition%>")
<%#ifTypeMatches type "TIME"%>
    public com.yahoo.elide.datastores.aggregation.timegrains.<%#getGrainType grain%><%/getGrainType%> get<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>() {
        return <%name%>;
    }

    public void set<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>(com.yahoo.elide.datastores.aggregation.timegrains.<%#getGrainType grain%><%/getGrainType%> <%name%>) {
        this.<%name%> = <%name%>;
    }
<%else%>
    public <%#getJavaType type%><%/getJavaType%> get<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>() {
        return <%name%>;
    }

    public void set<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>(<%#getJavaType type%><%/getJavaType%> <%name%>) {
        this.<%name%> = <%name%>;
    }
<%/ifTypeMatches%>
<%/each%>

<%#each joins%>
<%#ifTypeMatches type "toMany"%>
    private Set<<%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%>> <%name%>;

    @Join("<% definition %>")
    public Set<<%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%>> get<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>() {
        return <%name%>;
    }

    public void set<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>(Set<<%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%>> <%name%>) {
        this.<%name%> = <%name%>;
    }
<%else%>
    private <%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%> <%name%>;

    @Join("<% definition %>")
    public <%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%> get<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>() {
        return <%name%>;
    }

    public void set<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>(<%#capitalizeFirstLetter to%><%/capitalizeFirstLetter%> <%name%>) {
        this.<%name%> = <%name%>;
    }
<%/ifTypeMatches%>
<%/each%>

<%#each measures%>
    <%#if override%>
    <%else%>
    protected <%#getJavaType type%><%/getJavaType%> <%name%>;
    <%/if%>
    @MetricFormula("<%definition%>")
    <%#if readAccess%>@ReadPermission(expression = "<%readAccess%>")<%/if%>
    @ColumnMeta(
        description = "<%description%>",
        category="<%category%>",
        tags={<%#collectionToString tags%><%/collectionToString%>}
    )
    <%#if hidden%>@Exclude<%/if%>
    <%#if override%>@Override<%/if%>
    public <%#getJavaType type%><%/getJavaType%> get<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>() {
        return <%name%>;
    }

    public void set<%#capitalizeFirstLetter name%> <%/capitalizeFirstLetter%>(<%#getJavaType type%><%/getJavaType%> <%name%>) {
        this.<%name%> = <%name%>;
    }
<%/each%>
}
