{
  "$schema": "https://json-schema.org/draft-06/schema#",
  "$id": "https://elide.io/schemas/table_schema_v1#",
  "description": "Elide Table config json/hjson schema",
  "definitions": {
    "grain": {
      "title": "Grains",
      "description": "Grains can have SQL expressions that can substitute column with the dimension definition expression",
      "type": "object",
      "properties": {
        "grain": {
          "title": "Time granularity",
          "description": "Indicates grain time granularity",
          "type": "string",
          "enum": [
            "DAY",
            "WEEK",
            "MONTH",
            "YEAR"
          ]
        },
        "sql": {
          "title": "Grain SQL",
          "description": "Grain SQL query",
          "type": "string"
        }
      },
      "required": [
        "grain",
        "sql"
      ],
      "additionalProperties": false
    },
    "join": {
      "title": "Join",
      "description": "Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Join name",
          "description": "The name of the join relationship.",
          "type": "string"
        },
        "to": {
          "title": "Join table name",
          "description": "The name of the table that is being joined to",
          "type": "string",
          "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$"
        },
        "type": {
          "title": "Type of Join",
          "description": "Type of the join - toOne or toMany",
          "type": "string",
          "enum": [
            "toOne",
            "toMany"
          ]
        },
        "definition": {
          "title": "Join definition SQL",
          "description": "Templated SQL expression that represents the ON clause of the join",
          "type": "string"
        }
      },
      "required": [
        "name",
        "to",
        "type",
        "definition"
      ],
      "additionalProperties": false
    },
    "enumtype": {
      "title": "Dimension field type",
      "description": "The data type of the dimension field",
      "type": "string",
      "enum": [
        "INTEGER",
        "DECIMAL",
        "MONEY",
        "TEXT",
        "COORDINATE",
        "BOOLEAN"
      ]
    },
    "measure": {
      "title": "Measure",
      "description": "Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Metric name",
          "description": "The name of the metric. This will be the same as the POJO field name.",
          "type": "string",
          "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$"
        },
        "description": {
          "title": "Metric description",
          "description": "A long description of the metric.",
          "type": "string"
        },
        "category": {
          "title": "Measure group category",
          "description": "Category for grouping",
          "type": "string"
        },
        "hidden": {
          "title": "Hide/Show measure",
          "description": "Whether this metric is exposed via API metadata",
          "type": "boolean",
          "default": false
        },
        "readAccess": {
          "title": "Measure read access",
          "description": "Read permission for the metric.",
          "type": "string",
          "default": "Prefab.Role.All"
        },
        "definition": {
          "title": "Metric definition",
          "description": "The definition of the metric",
          "type": "string"
        },
        "type": {
          "oneOf":[
            {"$ref": "#/definitions/enumtype"},
            {"enum": [
              "TIME"
            ]}
          ],
          "default": "INTEGER"
        }
      },
      "required": [
        "name",
        "definition"
      ],
      "additionalProperties": false
    },
    "dimensionRef": {
      "title": "Dimension",
      "description": "Dimensions represent labels for measures. Dimensions are used to filter and group measures.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Dimension name",
          "description": "The name of the dimension. This will be the same as the POJO field name.",
          "type": "string",
          "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$"
        },
        "description": {
          "title": "Dimension description",
          "description": "A long description of the dimension.",
          "type": "string"
        },
        "category": {
          "title": "Dimension group category",
          "description": "Category for grouping dimension",
          "type": "string"
        },
        "hidden": {
          "title": "Hide/Show dimension",
          "description": "Whether this dimension is exposed via API metadata",
          "type": "boolean",
          "default": false
        },
        "readAccess": {
          "title": "Dimension read access",
          "description": "Read permission for the dimension.",
          "type": "string",
          "default": "Prefab.Role.All"
        },
        "definition": {
          "title": "Dimension definition",
          "description": "The definition of the dimension",
          "type": "string",
          "default": ""
        },
        "tags": {
          "title": "Dimension tags",
          "description": "An array of string based tags for dimensions",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "default": []
        }
      }
    },
    "dimension": {
      "title": "Dimension",
      "description": "Dimensions represent labels for measures. Dimensions are used to filter and group measures.",
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/dimensionRef" },
        {
          "properties": {
            "type": {
              "oneOf":[
              {"$ref": "#/definitions/enumtype"},
              {"enum": [
                "RELATIONSHIP","ID"
              ]}
              ],
              "default": "TEXT"
            }
          }
        }
      ],
      "required": [
        "name",
        "type",
        "definition"
      ]
    },
    "timeDimension": {
      "title": "Time Dimension",
      "description": "Time Dimensions represent labels for measures. Dimensions are used to filter and group measures.",
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/dimensionRef" },
        {
          "properties": {
            "type": {
              "title": "Dimension field type",
              "description": "The data type of the dimension field",
              "type": "string",
              "enum": [
                "TIME"
              ],
              "default": "TIME"
            },
            "grains": {
              "title": "Time Dimension grains",
              "description": "Time Dimension granularity and Sqls",
              "type": "array",
              "items": {
                "$ref": "#/definitions/grain"
              },
              "default": []
            }
          }
        }
      ],
      "required": [
        "name",
        "type",
        "definition",
        "grains"
      ]
    }
  },
  "type": "object",
  "properties": {
    "tables": {
      "title": "Elide Table Models",
      "description": "Array of elide Table Models",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "title": "Elide Table Models",
        "description": "Array of elide Table Models",
        "type": "object",
        "properties": {
          "name": {
            "title": "Table Model Name",
            "description": "The name of the model. This will be the same as the POJO class name.",
            "type": "string",
            "pattern": "^[A-Z][0-9A-Za-z]*$"
          },
          "schema": {
            "title": "Table Schema",
            "description": "The database or schema where the model lives.",
            "type": "string",
            "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$",
            "default": ""
          },
          "hidden": {
            "title": "Hide/Show Table",
            "description": "Whether this table is exposed via API metadata",
            "type": "boolean",
            "default": false
          },
          "description": {
            "title": "Table Model description",
            "description": "A long description of the model.",
            "type": "string"
          },
          "cardinality": {
            "title": "Model cardinality",
            "description": "The number of rows in the table: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).",
            "type": "string",
            "enum": [
              "tiny",
              "small",
              "medium",
              "large",
              "huge"
            ],
            "default": "tiny"
          },
          "readAccess": {
            "title": "Table read access",
            "description": "Read permission for the table.",
            "type": "string",
            "default": "Prefab.Role.All"
          },
          "joins": {
            "title": "Table joins",
            "description": "Describes SQL joins to other tables for column references.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/join"
            },
            "default": []
          },
          "measures": {
            "title": "Table measures",
            "description": "Zero or more metric definitions.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/measure"
            },
            "default": []
          },
          "dimensions": {
            "title": "Table dimensions",
            "description": "One or more dimension definitions.",
            "type": "array",
            "items": {
              "anyOf": [
                {"$ref": "#/definitions/dimension"} ,
                {"$ref": "#/definitions/timeDimension"}
              ]
            },
            "default": []
          },
          "tags": {
            "title": "Table tags",
            "description": "An array of string based tags",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "oneOf": [
          {
            "properties": {
              "sql": {
                "title": "Table SQL",
                "description": "SQL query which is used to populate the table.",
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "name",
              "sql",
              "dimensions"
            ]
          } ,
          {
            "properties": {
              "table": {
                "title": "Table name",
                "description": "The physical table name where the model lives.",
                "type": "string",
                "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$",
                "default": ""
              }
            },
            "required": [
              "name",
              "table",
              "dimensions"
            ]
          },
          {
            "properties": {
              "extend": {
                "title": "Table Extends",
                "description": "Extends another logical table.",
                "type": "string",
                "pattern": "^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$",
                "default": ""
              }
            },
            "required": [
              "name",
              "extend"
            ]
          }
        ]
      }
    }
  },
  "minProperties": 1,
  "required": [
    "tables"
  ],
  "additionalProperties": false
}
